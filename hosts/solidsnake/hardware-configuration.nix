# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [];
  boot.initrd.kernelModules = [ "8021q"
"nls_iso8859_1"
"nls_cp437"
"crct10dif_ce"
"polyval_ce"
"polyval_generic"
"sm4"
"rk805_pwrkey"
"pwm_beeper"
"optee"
"pwm_fan"
"tcpm"
"ffa_core"
"hantro_vpu"
"phy_rockchip_naneng_combphy"
"rockchip_saradc"
"rockchip_thermal"
"rockchipdrm"
"v4l2_vp9"
"dw_mipi_dsi"
"v4l2_h264"
"analogix_dp"
"rockchip_rga"
"v4l2_jpeg"
"dw_hdmi"
"rockchip_dfi"
"drm_display_helper"
"v4l2_mem2mem"
"videobuf2_dma_sg"
"videobuf2_dma_contig"
"videobuf2_memops"
"videobuf2_v4l2"
"videobuf2_common"
"videodev"
"panthor"
"mc"
"cec"
"drm_gpuvm"
"drm_dma_helper"
"drm_exec"
"adc_keys"
"gpu_sched"
"pci_endpoint_test"
"uio_pdrv_genirq"
"uio"
"sch_fq_codel"
"tap"
"macvlan"
"fuse"
"dm_crypt"
"encrypted_keys"
"trusted"
"caam_jr"
"libdes"
"authenc"
"caamhash_desc"
"caamalg_desc"
"caam"
"error"
"crypto_engine"
"asn1_encoder"
"mmc_block"
"rpmb_core"
"dm_mod"
"dax"
"rtc_hym8563"
"r8169" ];


  boot.kernelModules = [
"8021q"
"nls_iso8859_1"
"nls_cp437"
"crct10dif_ce"
"polyval_ce"
"polyval_generic"
"sm4"
"rk805_pwrkey"
"pwm_beeper"
"optee"
"pwm_fan"
"tcpm"
"ffa_core"
"hantro_vpu"
"phy_rockchip_naneng_combphy"
"rockchip_saradc"
"rockchip_thermal"
"rockchipdrm"
"v4l2_vp9"
"dw_mipi_dsi"
"v4l2_h264"
"analogix_dp"
"rockchip_rga"
"v4l2_jpeg"
"dw_hdmi"
"rockchip_dfi"
"drm_display_helper"
"v4l2_mem2mem"
"videobuf2_dma_sg"
"videobuf2_dma_contig"
"videobuf2_memops"
"videobuf2_v4l2"
"videobuf2_common"
"videodev"
"panthor"
"mc"
"cec"
"drm_gpuvm"
"drm_dma_helper"
"drm_exec"
"adc_keys"
"gpu_sched"
"pci_endpoint_test"
"uio_pdrv_genirq"
"uio"
"sch_fq_codel"
"tap"
"macvlan"
"fuse"
"dm_crypt"
"encrypted_keys"
"trusted"
"caam_jr"
"libdes"
"authenc"
"caamhash_desc"
"caamalg_desc"
"caam"
"error"
"crypto_engine"
"asn1_encoder"
"mmc_block"
"rpmb_core"
"dm_mod"
"dax"
"rtc_hym8563"
"r8169" ];


  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/1af0b72a-7205-4bec-9058-ef93799a3677";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."crypted".device = "/dev/disk/by-uuid/a5716a0e-f11c-465d-8f7a-ca1d998e71c2";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/3523-B874";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
# Networking configuration
  networking = {
    useDHCP = lib.mkDefault true;
  };

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
